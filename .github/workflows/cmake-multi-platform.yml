# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake Build on multiple platforms

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      # Set up a matrix to run the following 3 configurations:
      # 1. <Windows, Release, latest MSVC compiler toolchain on the default runner image, default generator>
      # 2. <Linux, Release, latest GCC compiler toolchain on the default runner image, default generator>
      # 3. <Linux, Release, latest Clang compiler toolchain on the default runner image, default generator>
      #
      # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
      matrix:
        os: [ubuntu-latest, windows-latest]
        build-type: [Debug, Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
            preset: windows
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            preset: linux

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup VCPKG
      # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgDirectory: ${{ env.VCPKG_ROOT }}
        vcpkgTriplet: ${{ env.VCPKG_TRIPLET }}
        appendedCacheKey: ${{ matrix.preset }}-${{ matrix.build-type }}

    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: 6.8.2
        
    - name: Configure CMake
      shell: bash
      run: |
        cmake --preset ${{ matrix.preset }}-${{ matrix.build-type }} \
          -DVCPKG_TARGET_TRIPLET=${{ env.VCPKG_TRIPLET }} \
          -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake
          
    - name: Build
      shell: bash
      run: |
        cmake --build --preset ${{ matrix.preset }}-${{ matrix.build-type }}
        
    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}-${{ matrix.build-type }}
        path: |
          cmake_build/${{ matrix.preset }}-${{ matrix.build-type }}/aqua_server*
          cmake_build/${{ matrix.preset }}-${{ matrix.build-type }}/aqua_client*
          cmake_build/${{ matrix.preset }}-${{ matrix.build-type }}/aqua-qt*
        if-no-files-found: error
